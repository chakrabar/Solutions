{
    "compilerOptions": {
        "module": "commonjs", //module format, default: commonjs for up to target:es5, or es6
        // es6 uses :: import { module1 } from './modules/myModule'
        // commonjs uses :: ar functions_1 = require("./modules/myModule")        
        "preserveConstEnums": true,
        "sourceMap": true, // generate source map
        "removeComments": true,
        "target": "es5", // generated JS standard, apparently module:es6 does not work well with vs code debugger
        "watch": true, // watch file change and compile automatically
        "outDir": "compiled", // redirect generated JS directory structure to this
        // use following option to generate a single compiled JS (mainly for browsers, easy module resolution)
        // it'll ignore the outDir. The module system needs to be amd (OR system)
        // "outFile": "compiled/dist/myCoolLib.js"
        "noImplicitAny": true, // to use type any, it has to be set explicitly i.e. strict - nothing without a type        
        "noUnusedLocals": false, // true for strict production code
        "noUnusedParameters": false, // true for strict production code
        "noImplicitReturns": true, // report error if not all code paths return a value
        "traceResolution": false // true to debug-trace how it is trying to resolve the module paths
    },
    "files": [
        "app.ts" // entry point file(s). anything referred from here will be INCLUDED in compiled JS
    ],
    "exclude": [ // files/directories to exclude from compiling
        "node_modules",
        "lib"
        // NOTE: this only affects files included by include option, NOT by files option
        // this is complimentary to files option. IF FILES option is used, THIS IS IGNORED
    ]
}